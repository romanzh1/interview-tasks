// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package db_sqlc_cart_repo

import (
	"context"
)

const addItem = `-- name: AddItem :exec
INSERT INTO items (user_id, sku, count)
VALUES ($1, $2, $3)
`

type AddItemParams struct {
	UserID int64
	Sku    int32
	Count  int32
}

func (q *Queries) AddItem(ctx context.Context, arg AddItemParams) error {
	_, err := q.db.Exec(ctx, addItem, arg.UserID, arg.Sku, arg.Count)
	return err
}

const getItemsByUserID = `-- name: GetItemsByUserID :many
SELECT user_id, sku, count
FROM items
WHERE user_id = $1
`

func (q *Queries) GetItemsByUserID(ctx context.Context, userID int64) ([]Item, error) {
	rows, err := q.db.Query(ctx, getItemsByUserID, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Item
	for rows.Next() {
		var i Item
		if err := rows.Scan(&i.UserID, &i.Sku, &i.Count); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
